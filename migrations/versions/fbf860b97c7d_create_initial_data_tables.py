"""Create initial data tables

Revision ID: fbf860b97c7d
Revises: 
Create Date: 2018-06-08 11:13:35.578532

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'fbf860b97c7d'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('book', sa.Column('section', sa.Integer(), nullable=False))
    op.drop_constraint('book_sectionID_fkey', 'book', type_='foreignkey')
    op.create_foreign_key(None, 'book', 'section', ['section'], ['id'])
    op.drop_column('book', 'sectionID')
    op.add_column('borrow', sa.Column('book_id', sa.Integer(), nullable=False))
    op.add_column('borrow', sa.Column('borrowed_at', sa.DateTime(), nullable=True))
    op.add_column('borrow', sa.Column('due_at', sa.DateTime(), nullable=False))
    op.add_column('borrow', sa.Column('is_active', sa.Boolean(), nullable=True))
    op.add_column('borrow', sa.Column('user_id', sa.Integer(), nullable=False))
    op.drop_column('borrow', 'dueAt')
    op.drop_column('borrow', 'userID')
    op.drop_column('borrow', 'isActive')
    op.drop_column('borrow', 'borrowedAt')
    op.drop_column('borrow', 'bookID')
    op.drop_column('section', 'brief')
    op.add_column('user', sa.Column('about_me', sa.String(length=200), nullable=True))
    op.add_column('user', sa.Column('is_admin', sa.Boolean(), nullable=True))
    op.add_column('user', sa.Column('last_seen', sa.DateTime(), nullable=True))
    op.alter_column('user', 'password',
               existing_type=sa.VARCHAR(length=128),
               nullable=False)
    op.drop_column('user', 'isAdmin')
    op.drop_column('user', 'aboutMe')
    op.drop_column('user', 'lastSeen')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('user', sa.Column('lastSeen', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('user', sa.Column('aboutMe', sa.VARCHAR(length=200), autoincrement=False, nullable=True))
    op.add_column('user', sa.Column('isAdmin', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.alter_column('user', 'password',
               existing_type=sa.VARCHAR(length=128),
               nullable=True)
    op.drop_column('user', 'last_seen')
    op.drop_column('user', 'is_admin')
    op.drop_column('user', 'about_me')
    op.add_column('section', sa.Column('brief', sa.VARCHAR(length=200), autoincrement=False, nullable=False))
    op.add_column('borrow', sa.Column('bookID', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('borrow', sa.Column('borrowedAt', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.add_column('borrow', sa.Column('isActive', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.add_column('borrow', sa.Column('userID', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('borrow', sa.Column('dueAt', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.drop_column('borrow', 'user_id')
    op.drop_column('borrow', 'is_active')
    op.drop_column('borrow', 'due_at')
    op.drop_column('borrow', 'borrowed_at')
    op.drop_column('borrow', 'book_id')
    op.add_column('book', sa.Column('sectionID', sa.INTEGER(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'book', type_='foreignkey')
    op.create_foreign_key('book_sectionID_fkey', 'book', 'section', ['sectionID'], ['id'])
    op.drop_column('book', 'section')
    # ### end Alembic commands ###
